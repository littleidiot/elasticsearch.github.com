---
layout: guide
title: Installation
cat: guide
sidebar: reference_setup
---

p. After "downloading":/download the latest release and extracting it, *elasticsearch* can be started using:

<pre class="prettyprint lang-sh">
$ bin/elasticsearch
</pre>

Under *nix system, the command will start the process in the background. To run it in the foreground, add the -f switch to it:

<pre class="prettyprint lang-sh">
$ bin/elasticsearch -f
</pre>

ElasticSearch is built using Java, and requires "Java 6":http://java.sun.com/javase/downloads/index.jsp in order to run. The version of Java that will be used can be set by setting the @JAVA_HOME@ environment variable.

h1. Environment Variables

p. Within the scripts, ElasticSearch comes with a built in @JAVA_OPTS@ argument passed to the JVM that was started. The most important setting for that is the @-Xmx@ parameter that controls the maximum allowed memory for the elastic search java process, and the @-Xms@ parameter that controls the minimum allocated memory (_in general, the more memory allocated to the process, the better_).

p. Most times it is better to leave the default @JAVA_OPTS@ as they are, and use the @ES_JAVA_OPTS@ environment variable in order to set / change JVM settings or arguments.

p. The @ES_HEAP_SIZE@ environment variable allows you to set the heap memory that will be allocated to the elasticsearch java process. It will allocate the same value to both min and max values, though those can be set explicitly (not recommended) by setting the @ES_MIN_MEM@ environment variable (defaults to @256m@), and the @ES_MAX_MEM@ (defaults to @1gb@) environment variable.

p. It is recommended that ypou set the min and max memory to the same value, and enable @mlockall@ (see later).

h2. *NIX

p. There are added features when using the @elasticsearch@ shell script. The first, which was explained earlier, is the ability to easily run the process either in the foreground or the background.

p. Another feature is the ability to pass @-X@ and @-D@ parameters directly to the script. When set, both override anything set using either @JAVA_OPTS@ or @ES_JAVA_OPTS@. For example:

<pre class="prettyprint lang-sh">
$ bin/elasticsearch -f -Xmx2g -Xms2g -Des.index.storage.type=memory
</pre>

h1. Important Configurations

h2. File Descriptors

p. Make sure to increase the number of open files descriptors on the machine (or for the user running elasticsearch). Setting it to 32k or even 64k is recommended.

p. In order to test how many open files the process can open, start it with @-Des.max-open-files@ parameter set to @true@. This will print the number of open files the process can open on startup.

h2. Memory Settings

p.  There is an option to use "mlockall":http://opengroup.org/onlinepubs/007908799/xsh/mlockall.html to try and lock the process address space so it will not be swapped. For this to work, the @bootstrap.mlockall@ parameter should be set to @true@ and it is recommended to set both the min and max memory allocation to be the same. 

p. In order to see if this works or not, set the @common.jna@ logging level to DEBUG. Note that a solution to the "Unknown mlockall error 0" error can be to set @ulimit -l unlimited@.

p. Note, this is an experimental feature, and might cause the JVM or shell session to exit if it fails to allocate the memory (because not enough memory is available on the machine).

h1. Running As a Service

p. It should be simple to wrap the @elasticsearch@ script in an @init.d@ or the like. But, elasticsearch also supports running using the "Java Service Wrapper":http://wrapper.tanukisoftware.com/.

p. ElasticSearch can be run as a service using the @elasticsearch@ script located under the @bin/service@ location. The repo for it is located "here":http://github.com/elasticsearch/elasticsearch-servicewrapper. The script accepts a single parameter with the following values:

|_. Parameter |_. Description |
|@console@|Run the elasticsearch in the foreground.|
|@start@|Run elasticsearch in the background.|
|@stop@|Stops elasticsearch if its running.|
|@install@|Install elasticsearch to run on system startup (init.d / service).|
|@remove@|Removes elasticsearch from system startup (init.d / service).|

p. The service uses a Java Service Wrapper which is a small native wrapper around the Java virtual machine which also monitors it.

p. Note, passing JVM level configuration (such as -X parameters) is achieved using configuration within the @elasticsearch.conf@ file. 

p. Use the @ES_MIN_MEM@ and @ES_MAX_MEM@ environment variables to set the minimum and maximum memory allocation for the JVM (set in megabytes). It defaults to @256@ and @1024@ respectively.
